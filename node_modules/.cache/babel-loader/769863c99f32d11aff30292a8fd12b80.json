{"ast":null,"code":"import axios from \"axios\";\nimport { useState } from \"react/cjs/react.development\";\nimport { api } from \"../config\";\nexport const getCliente = async (id, data, status) => {\n  await axios.get(`${api}/cliente/${id}`).then(response => {\n    data(response.data.cliente);\n    console.log(response.data.cliente.nome);\n  }).catch(() => {\n    status({\n      type: 'error',\n      message: 'Não foi possível encontrar o cliente.'\n    });\n  });\n};\nexport const toggling = async (toggleOn, setToggle) => {\n  if (toggleOn !== true) {\n    setToggle(true);\n  }\n};","map":{"version":3,"sources":["/home/lupe/Documents/git/ciclo4/src/Components/get-cliente.js"],"names":["axios","useState","api","getCliente","id","data","status","get","then","response","cliente","console","log","nome","catch","type","message","toggling","toggleOn","setToggle"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAOC,EAAP,EAAWC,IAAX,EAAiBC,MAAjB,KAA2B;AACjD,QAAMN,KAAK,CAACO,GAAN,CAAW,GAAEL,GAAI,YAAWE,EAAG,EAA/B,EACLI,IADK,CACCC,QAAD,IAAa;AACfJ,IAAAA,IAAI,CAACI,QAAQ,CAACJ,IAAT,CAAcK,OAAf,CAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACJ,IAAT,CAAcK,OAAd,CAAsBG,IAAlC;AACH,GAJK,EAIHC,KAJG,CAIG,MAAI;AACTR,IAAAA,MAAM,CAAC;AACHS,MAAAA,IAAI,EAAC,OADF;AAEHC,MAAAA,OAAO,EAAC;AAFL,KAAD,CAAN;AAIH,GATK,CAAN;AAUH,CAXM;AAcP,OAAO,MAAMC,QAAQ,GAAG,OAAOC,QAAP,EAAiBC,SAAjB,KAA6B;AACjD,MAAGD,QAAQ,KAAK,IAAhB,EAAqB;AACjBC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,CAJM","sourcesContent":["import axios from \"axios\"\nimport { useState } from \"react/cjs/react.development\"\nimport { api } from \"../config\"\n\nexport const getCliente = async (id, data, status) =>{\n    await axios.get(`${api}/cliente/${id}`)\n    .then((response) =>{\n        data(response.data.cliente)\n        console.log(response.data.cliente.nome)\n    }).catch(()=>{\n        status({\n            type:'error',\n            message:'Não foi possível encontrar o cliente.'\n        })\n    })\n}\n\n\nexport const toggling = async (toggleOn, setToggle)=>{\n    if(toggleOn !== true){\n        setToggle(true)\n    }\n}"]},"metadata":{},"sourceType":"module"}