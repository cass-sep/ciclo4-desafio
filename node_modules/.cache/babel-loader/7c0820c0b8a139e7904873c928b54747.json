{"ast":null,"code":"import axios from \"axios\"; // import { useState } from \"react/cjs/react.development\"\n\nimport { api } from \"../config\";\nexport const getCliente = async (id, data, status, tO, sTO) => {\n  await axios.get(`${api}/cliente/${id}`).then(response => {\n    data(response.data.cliente);\n  }).catch(() => {\n    status({\n      type: 'error',\n      message: 'Não foi possível encontrar o cliente.'\n    });\n  });\n  toggling(tO, sTO);\n};\nexport const toggling = async (toggleOn, setToggle) => {\n  if (toggleOn !== true) {\n    setToggle(true);\n  } else {\n    setToggle(false);\n  }\n};","map":{"version":3,"sources":["/home/lupe/Documents/git/ciclo4/src/Components/get-cliente.js"],"names":["axios","api","getCliente","id","data","status","tO","sTO","get","then","response","cliente","catch","type","message","toggling","toggleOn","setToggle"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAOC,EAAP,EAAWC,IAAX,EAAiBC,MAAjB,EAAyBC,EAAzB,EAA6BC,GAA7B,KAAoC;AAC1D,QAAMP,KAAK,CAACQ,GAAN,CAAW,GAAEP,GAAI,YAAWE,EAAG,EAA/B,EACLM,IADK,CACCC,QAAD,IAAa;AACfN,IAAAA,IAAI,CAACM,QAAQ,CAACN,IAAT,CAAcO,OAAf,CAAJ;AACH,GAHK,EAGHC,KAHG,CAGG,MAAI;AACTP,IAAAA,MAAM,CAAC;AACHQ,MAAAA,IAAI,EAAC,OADF;AAEHC,MAAAA,OAAO,EAAC;AAFL,KAAD,CAAN;AAIH,GARK,CAAN;AASAC,EAAAA,QAAQ,CAACT,EAAD,EAAKC,GAAL,CAAR;AACH,CAXM;AAcP,OAAO,MAAMQ,QAAQ,GAAG,OAAOC,QAAP,EAAiBC,SAAjB,KAA6B;AACjD,MAAGD,QAAQ,KAAK,IAAhB,EAAqB;AACjBC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD,MAEK;AACDA,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,CANM","sourcesContent":["import axios from \"axios\"\n// import { useState } from \"react/cjs/react.development\"\nimport { api } from \"../config\"\n\nexport const getCliente = async (id, data, status, tO, sTO) =>{\n    await axios.get(`${api}/cliente/${id}`)\n    .then((response) =>{\n        data(response.data.cliente)\n    }).catch(()=>{\n        status({\n            type:'error',\n            message:'Não foi possível encontrar o cliente.'\n        })\n    })\n    toggling(tO, sTO)\n}\n\n\nexport const toggling = async (toggleOn, setToggle)=>{\n    if(toggleOn !== true){\n        setToggle(true)\n    }else{\n        setToggle(false)\n    }\n}"]},"metadata":{},"sourceType":"module"}