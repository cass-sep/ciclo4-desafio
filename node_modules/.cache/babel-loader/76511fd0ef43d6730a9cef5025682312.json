{"ast":null,"code":"var _jsxFileName = \"/home/lupe/Documents/git/ciclo4/src/views/Compra/Listar/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Table, Alert, Form, FormGroup, Label, Input, Button, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { dropClientes, getCliente } from '../../../Components/get-cliente';\nimport profile from '../../../profile.png';\nimport '../../../cliente-style.css';\nimport { api } from '../../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListarCompras = () => {\n  _s();\n\n  let [alo, setAlo] = useState();\n  let [cadAtivado, setCadAtivado] = useState();\n  let [editAtivado, setEditAtivado] = useState();\n  let [idEdit, setIdEdit] = useState();\n  const [infoC, setInfoC] = useState([]); // variavel para ativar e desativar informacoes\n\n  let [tOn, setTog] = useState(); // variavel pra saber qual botao foi apertado\n\n  let [oldId, setOldId] = useState();\n  const [cliente, setCliente] = useState();\n  const [listaClientes, setListaClientes] = useState([]);\n  const [data, setData] = useState([]);\n  const [status, setStatus] = useState({\n    type: '',\n    message: ''\n  });\n  const [compra, setCompra] = useState({\n    id: '',\n    ClienteId: '',\n    data: ''\n  });\n  let [daCo, setDaco] = useState();\n\n  const valorInput = e => setCompra({ ...compra,\n    [e.target.name]: e.target.value\n  });\n\n  const cadOn = alerto => {\n    if (cadAtivado !== true) {\n      setCadAtivado(cadAtivado = true);\n    } else {\n      setCadAtivado(cadAtivado = false);\n      setAlo(alo = alerto);\n    }\n  }; // função que ativa e desativa informações\n\n\n  const cliAtivo = (id, setInfoC, setStatus) => {\n    getCliente(id, setInfoC, setStatus);\n\n    if (tOn !== true) {\n      setTog(true);\n      setOldId(id);\n    } else if (id === oldId) {\n      setTog(false);\n    } else {\n      setOldId(id);\n    }\n  };\n\n  const getCompras = async () => {\n    await axios.get(api + '/listacompras').then(response => {\n      setData(response.data);\n    }).catch(() => {\n      setStatus({\n        type: 'error',\n        message: \"Erro: sem conexão com a API.\"\n      });\n      console.log(\"Erro: sem conexão com a API.\");\n    });\n  };\n\n  const getDataCompra = async id => {\n    await axios.get(`${api}/compra/${id}`).then(response => {\n      setDaco(response.data.data);\n    }).catch(() => {\n      setStatus({\n        type: 'error',\n        message: \"Erro: sem conexão com a API.\"\n      });\n      console.log(\"Erro: sem conexão com a API.\");\n    });\n  };\n\n  const delCompra = async idCompra => {\n    console.log(idCompra);\n    const headers = {\n      'Content-type': 'application/json'\n    };\n\n    if (window.confirm('Tem certeza que deseja excluir esta compra?')) {\n      await axios.delete(`${api}/excluir-compra/${idCompra}`, {\n        headers\n      }).then(response => {\n        // console.log(response.data.type)\n        // console.log(response.data.message)\n        setStatus({\n          type: 'error',\n          message: \"Cliente excluído com sucesso.\"\n        });\n        getCompras();\n        setAlo(true);\n      }).catch(() => {\n        setStatus({\n          type: 'error',\n          message: 'Erro: Não foi possível conexão com API'\n        });\n      });\n    }\n  };\n\n  const cadCompra = async e => {\n    e.preventDefault();\n    console.log(compra.ClienteId);\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    await axios.post(`${api}/novacompras`, compra, {\n      headers\n    }).then(response => {\n      if (response.data.error) {\n        setStatus({\n          type: 'error',\n          message: response.data.message\n        });\n        console.log(status.message);\n      } else {\n        setStatus({\n          type: 'success',\n          message: response.data.message\n        });\n      }\n    }).catch(() => {\n      console.log('Erro! Sem conexão.');\n    });\n    console.log(status.type);\n    getCompras();\n    cadOn(true);\n    setTog(false);\n    setCompra({\n      id: '',\n      ClienteId: '',\n      data: ''\n    });\n  };\n\n  editAtivado = false;\n\n  const editOn = editId => {\n    getDaco(editId); // getDataCompra(editId)\n\n    setEditAtivado(editAtivado = true);\n    setIdEdit(idEdit = editId); // setDaco(comData)\n\n    console.log(editAtivado); // console.log(editId)\n    // console.log(daCo)\n  };\n\n  const editOff = () => {\n    setEditAtivado(false);\n    setIdEdit(0);\n  };\n\n  const getDaco = async id => {\n    await axios(`${api}/compra/${id}`).then(response => {\n      setDaco(response.data.compras.data); // console.log(response.data.compras.data)\n    }).catch(() => {\n      console.log(\"Erro: não foi possível acessar API.\");\n    });\n    setIdEdit(id);\n    console.log(idEdit);\n  };\n\n  const editCompra = async (e, id, dataC, ClienteId) => {\n    e.preventDefault();\n    setEditAtivado(false);\n    setIdEdit(0);\n    const headers = {\n      'Content-Type': \"application/json\"\n    };\n    await axios.put(`${api}/editar-compra/${id}`, {\n      dataC,\n      ClienteId\n    }, {}, {\n      headers\n    }).then(response => {\n      setStatus({\n        type: 'success',\n        message: 'Alteração feita com sucesso.'\n      });\n    }).catch(() => {\n      setStatus({\n        type: 'error',\n        message: 'Não foi possível alterar informação.'\n      });\n    });\n  };\n\n  const alerta = () => {\n    let alerto = false;\n    cadOn(alerto);\n    dropClientes(setListaClientes, setStatus);\n  };\n\n  useEffect(() => {\n    getCompras();\n    getDataCompra();\n  }, [idEdit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid p-2 c-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Visualizar informa\\xE7\\xF5es das compras\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => alerta(),\n              className: \"btn btn-outline-primary btn-sm\",\n              children: \"Cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), cadAtivado === true ? /*#__PURE__*/_jsxDEV(Form, {\n              className: \"d-flex flex-row mt-2 bg-light border-top border-primary\",\n              onSubmit: cadCompra,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"d-flex flex-row\",\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"w-70 p-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    children: \"Id do Cliente\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(UncontrolledDropdown, {\n                    children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n                      caret: true,\n                      children: !compra.ClienteId ? \"Clientes\" : `id: ${compra.ClienteId}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n                      children: listaClientes.map(item => /*#__PURE__*/_jsxDEV(DropdownItem, {\n                        onClick: e => setCompra({ ...compra,\n                          'ClienteId': e.target.innerHTML\n                        }),\n                        children: item.id\n                      }, item.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 271,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"w-70 p-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    children: \"Data da Compra\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    name: \"data\",\n                    placeholder: \"Data da compra\",\n                    type: \"text\",\n                    onChange: valorInput,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"h-50 d-flex my-auto mb-auto\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  outline: true,\n                  color: \"primary\",\n                  children: \"Cadastrar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"reset\",\n                  outline: true,\n                  color: \"primary\",\n                  children: \"Limpar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), status.type === 'error' && cadAtivado !== true && alo === true ? /*#__PURE__*/_jsxDEV(Alert, {\n            color: \"danger\",\n            children: status.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this) : '', status.type === 'success' && cadAtivado !== true && alo === true ? /*#__PURE__*/_jsxDEV(Alert, {\n            color: \"success\",\n            children: status.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), cadAtivado !== true && tOn === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"profile-c\",\n          className: \"d-flex c-place end\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"m-0 fit\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              id: \"info\",\n              className: \"d-grid p-2 fit\",\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: infoC.nome\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: infoC.endereco\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: infoC.cidade\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: infoC.uf\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: infoC.nascimento\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 pt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"pic\",\n              alt: \"profile\",\n              src: profile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id do Cliente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                onClick: () => cliAtivo(item.ClienteId, setInfoC, setStatus),\n                children: item.ClienteId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 33\n            }, this), item.id !== idEdit ? /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 55\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"data\",\n                  placeholder: \"Data da compra\",\n                  type: \"text\",\n                  value: daCo,\n                  onChange: e => setDaco(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 37\n            }, this), item.id !== idEdit && editAtivado !== true ? /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/itens-compra/${item.id}`,\n                className: \"btn btn-outline-primary btn-sm\",\n                children: \"Itens\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => editOn(item.id),\n                className: \"btn btn-outline-warning btn-sm\",\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn btn-outline-danger btn-sm\",\n                onClick: () => delCompra(item.id),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: e => editCompra(e, item.id, daCo, item.ClienteId),\n                className: \"btn btn-outline-success btn-sm\",\n                children: \"Confirmar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: e => editOff(),\n                className: \"btn btn-outline-danger btn-sm\",\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 37\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListarCompras, \"vOSLWtfgKo+dwdCsSSyZznHWw1E=\");\n\n_c = ListarCompras;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListarCompras\");","map":{"version":3,"sources":["/home/lupe/Documents/git/ciclo4/src/views/Compra/Listar/index.js"],"names":["axios","useEffect","useState","Link","Container","Table","Alert","Form","FormGroup","Label","Input","Button","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","dropClientes","getCliente","profile","api","ListarCompras","alo","setAlo","cadAtivado","setCadAtivado","editAtivado","setEditAtivado","idEdit","setIdEdit","infoC","setInfoC","tOn","setTog","oldId","setOldId","cliente","setCliente","listaClientes","setListaClientes","data","setData","status","setStatus","type","message","compra","setCompra","id","ClienteId","daCo","setDaco","valorInput","e","target","name","value","cadOn","alerto","cliAtivo","getCompras","get","then","response","catch","console","log","getDataCompra","delCompra","idCompra","headers","window","confirm","delete","cadCompra","preventDefault","post","error","editOn","editId","getDaco","editOff","compras","editCompra","dataC","put","alerta","map","item","innerHTML","nome","endereco","cidade","uf","nascimento"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Table, Alert, Form, FormGroup, Label, Input, Button, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\"\nimport { dropClientes, getCliente } from '../../../Components/get-cliente'\nimport profile from '../../../profile.png'\nimport '../../../cliente-style.css'\n\nimport { api } from '../../../config'\n\nexport const ListarCompras = () => {\n\n    let [alo, setAlo] = useState()\n    let [cadAtivado, setCadAtivado] = useState()\n    let [editAtivado, setEditAtivado] = useState()\n    let [idEdit, setIdEdit] = useState()\n\n    const [infoC, setInfoC] = useState([])\n\n    // variavel para ativar e desativar informacoes\n    let [tOn, setTog] = useState()\n\n    // variavel pra saber qual botao foi apertado\n    let [oldId, setOldId] = useState()\n\n\n    const [cliente, setCliente] = useState()\n    const [listaClientes, setListaClientes] = useState([])\n\n    const [data, setData] = useState([])\n    const [status, setStatus] = useState({\n        type: '',\n        message: ''\n    })\n    const [compra, setCompra] = useState({\n        id: '',\n        ClienteId: '',\n        data: ''\n    })\n\n    let [daCo, setDaco] = useState()\n\n    const valorInput = e => setCompra({\n        ...compra, [e.target.name]: e.target.value\n    })\n\n    const cadOn = (alerto) => {\n        if (cadAtivado !== true) {\n            setCadAtivado(cadAtivado = true)\n        } else {\n            setCadAtivado(cadAtivado = false)\n            setAlo(alo = alerto)\n        }\n    }\n\n\n\n    // função que ativa e desativa informações\n    const cliAtivo = (id, setInfoC, setStatus) => {\n        getCliente(id, setInfoC, setStatus)\n        if (tOn !== true) {\n            setTog(true)\n            setOldId(id)\n        } else if (id === oldId) {\n            setTog(false)\n        } else {\n            setOldId(id)\n        }\n    }\n\n\n\n    const getCompras = async () => {\n        await axios.get(api + '/listacompras').then(\n            (response) => {\n                setData(response.data)\n\n            }\n        ).catch(() => {\n            setStatus({\n                type: 'error',\n                message: \"Erro: sem conexão com a API.\"\n            })\n            console.log(\"Erro: sem conexão com a API.\")\n        })\n    }\n\n\n    const getDataCompra = async (id) => {\n        await axios.get(`${api}/compra/${id}`).then(\n            (response) => {\n\n                setDaco(response.data.data)\n\n            }\n        ).catch(() => {\n            setStatus({\n                type: 'error',\n                message: \"Erro: sem conexão com a API.\"\n            })\n            console.log(\"Erro: sem conexão com a API.\")\n        })\n    }\n\n\n\n    const delCompra = async (idCompra) => {\n        console.log(idCompra)\n\n        const headers = {\n            'Content-type': 'application/json'\n        }\n\n        if (window.confirm('Tem certeza que deseja excluir esta compra?')) {\n            await axios.delete(`${api}/excluir-compra/${idCompra}`, { headers })\n                .then((response) => {\n                    // console.log(response.data.type)\n                    // console.log(response.data.message)\n                    setStatus({\n                        type: 'error',\n                        message: \"Cliente excluído com sucesso.\"\n                    })\n                    getCompras()\n                    setAlo(true)\n                }).catch(() => {\n                    setStatus({\n                        type: 'error',\n                        message: 'Erro: Não foi possível conexão com API'\n                    })\n                })\n        }\n    }\n\n    const cadCompra = async e => {\n        e.preventDefault()\n        console.log(compra.ClienteId)\n\n        const headers = {\n            'Content-Type': 'application/json'\n        }\n\n        await axios.post(`${api}/novacompras`, compra, { headers })\n            .then((response) => {\n                if (response.data.error) {\n                    setStatus({\n                        type: 'error',\n                        message: response.data.message\n                    })\n                    console.log(status.message)\n                } else {\n                    setStatus({\n                        type: 'success',\n                        message: response.data.message\n                    })\n                }\n            })\n            .catch(() => {\n                console.log('Erro! Sem conexão.')\n            })\n\n        console.log(status.type)\n        getCompras()\n        cadOn(true)\n        setTog(false)\n        setCompra({\n            id: '',\n            ClienteId: '',\n            data: ''\n        })\n    }\n\n    editAtivado = false\n\n    const editOn = (editId) => {\n        getDaco(editId)\n        // getDataCompra(editId)\n        setEditAtivado(editAtivado = true)\n        setIdEdit(idEdit = editId)\n        // setDaco(comData)\n        console.log(editAtivado)\n        // console.log(editId)\n        // console.log(daCo)\n    }\n\n    const editOff = () => {\n        setEditAtivado(false)\n        setIdEdit(0)\n    }\n\n    const getDaco = async (id) => {\n        await axios(`${api}/compra/${id}`)\n            .then((response) => {\n                setDaco(response.data.compras.data)\n                // console.log(response.data.compras.data)\n            })\n            .catch(() => {\n                console.log(\"Erro: não foi possível acessar API.\")\n            })\n        setIdEdit(id)\n        console.log(idEdit)\n    }\n\n    const editCompra = async (e, id, dataC, ClienteId) => {\n        e.preventDefault()\n        setEditAtivado(false)\n        setIdEdit(0)\n\n        const headers = {\n            'Content-Type': \"application/json\"\n        }\n\n        await axios.put(`${api}/editar-compra/${id}`, { dataC, ClienteId }, {\n\n        }, { headers }).then(response => {\n            setStatus({\n                type: 'success',\n                message: 'Alteração feita com sucesso.'\n            })\n        }).catch(() => {\n            setStatus({\n                type: 'error',\n                message: 'Não foi possível alterar informação.'\n            })\n        })\n    }\n\n    const alerta = () => {\n        let alerto = false\n        cadOn(alerto)\n        dropClientes(setListaClientes, setStatus)\n    }\n\n    useEffect(() => {\n        getCompras();\n        getDataCompra()\n    }, [idEdit])\n\n    return (\n        <div>\n            <Container>\n                <div className=\"d-grid p-2 c-col\">\n                    <div>\n                        <h1>Visualizar informações das compras</h1>\n\n                        <div className=\"p-2\">\n                            <span onClick={() => alerta()}\n                                className=\"btn btn-outline-primary btn-sm\">\n                                Cadastrar\n                            </span>\n\n                            {cadAtivado === true ?\n                                <Form className=\"d-flex flex-row mt-2 bg-light border-top border-primary\" onSubmit={cadCompra}>\n                                    <FormGroup className='d-flex flex-row'>\n                                        <FormGroup className=\"w-70 p-2\">\n                                            <Label>\n                                                Id do Cliente\n                                            </Label>\n                                            {/* <Input\n                                                name=\"ClienteId\"\n                                                placeholder=\"Id do cliente\"\n                                                type=\"text\"\n                                                onChange={valorInput}\n                                                required\n                                            /> */}\n                                            <UncontrolledDropdown>\n                                                <DropdownToggle caret>\n                                                    {!compra.ClienteId ? \"Clientes\": `id: ${compra.ClienteId}`}\n                                                </DropdownToggle>\n                                                <DropdownMenu>\n                                                    {listaClientes.map(item => (\n                                                        <DropdownItem key={item.id} onClick={e => setCompra({\n                                                            ...compra, 'ClienteId': e.target.innerHTML\n                                                        })}>{item.id}</DropdownItem>\n                                                    ))}\n                                                    {/* <DropdownItem header>Selecionado</DropdownItem>\n                                                    <DropdownItem >42</DropdownItem>\n                                                    <DropdownItem divider />\n                                                    <DropdownItem>{compra.ClienteId}</DropdownItem> */}\n                                                </DropdownMenu>\n                                            </UncontrolledDropdown>\n                                        </FormGroup>\n                                        <FormGroup className=\"w-70 p-2\">\n                                            <Label>\n                                                Data da Compra\n                                            </Label>\n                                            <Input\n                                                name=\"data\"\n                                                placeholder=\"Data da compra\"\n                                                type=\"text\"\n                                                onChange={valorInput}\n                                                required\n                                            />\n                                        </FormGroup>\n                                    </FormGroup>\n                                    <FormGroup className=\"h-50 d-flex my-auto mb-auto\">\n                                        <Button type=\"submit\" outline color=\"primary\">\n                                            Cadastrar\n                                        </Button>\n                                        <Button type=\"reset\" outline color=\"primary\">\n                                            Limpar\n                                        </Button>\n                                    </FormGroup>\n                                </Form> : \"\"}\n                        </div>\n\n                        {status.type === 'error' && cadAtivado !== true && alo === true ?\n                            <Alert color=\"danger\">\n                                {status.message}\n                            </Alert>\n                            : ''}\n                        {status.type === 'success' && cadAtivado !== true && alo === true ?\n                            <Alert color=\"success\">\n                                {status.message}\n                            </Alert> : ''}\n                    </div>\n\n                    {cadAtivado !== true && tOn === true ?\n                        <div id=\"profile-c\" className=\"d-flex c-place end\">\n                            <table className=\"m-0 fit\">\n                                <tbody id=\"info\" className=\"d-grid p-2 fit\">\n                                    <tr><td>{infoC.nome}</td></tr>\n                                    <tr><td>{infoC.endereco}</td></tr>\n                                    <tr><td>{infoC.cidade}</td></tr>\n                                    <tr><td>{infoC.uf}</td></tr>\n                                    <tr><td>{infoC.nascimento}</td></tr>\n                                </tbody>\n                            </table>\n                            <div className=\"p-4 pt-2\">\n                                <img id=\"pic\" alt='profile' src={profile} />\n                            </div>\n\n                        </div> : <div></div>}\n                </div>\n\n                <Table striped>\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Id do Cliente</th>\n                            <th>Data</th>\n                            <th>Ação</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map(item => (\n                            <tr key={item.id}>\n                                <td>{item.id}</td>\n                                <td>\n                                    <Link\n                                        to=\"#\"\n                                        onClick={() => cliAtivo(item.ClienteId, setInfoC, setStatus)}>\n                                        {item.ClienteId}\n                                    </Link>\n                                </td>\n                                {item.id !== idEdit ? <td>{item.data}</td> :\n                                    <td>\n                                        <Form>\n                                            <Input\n                                                name=\"data\"\n                                                placeholder=\"Data da compra\"\n                                                type=\"text\"\n                                                value={daCo}\n                                                onChange={e => setDaco(e.target.value)}\n                                            />\n                                        </Form>\n                                    </td>\n                                }\n                                {item.id !== idEdit && editAtivado !== true ?\n                                    <td className=\"text-center\">\n                                        <Link to={`/itens-compra/${item.id}`}\n                                            className=\"btn btn-outline-primary btn-sm\">\n                                            Itens\n                                        </Link>\n                                        <span onClick={() => editOn(item.id)}\n                                            className=\"btn btn-outline-warning btn-sm\">\n                                            Editar\n                                        </span>\n\n                                        <span className=\"btn btn-outline-danger btn-sm\"\n                                            onClick={() => delCompra(item.id)}>Excluir</span>\n                                    </td> :\n                                    <td className=\"text-center\">\n                                        <span onClick={e => editCompra(e, item.id, daCo, item.ClienteId)}\n                                            className=\"btn btn-outline-success btn-sm\">\n                                            Confirmar\n                                        </span>\n                                        <span onClick={e => editOff()}\n                                            className=\"btn btn-outline-danger btn-sm\">\n                                            Cancelar\n                                        </span>\n                                    </td>}\n                            </tr>\n\n                        ))}\n\n                    </tbody>\n                </Table>\n\n            </Container>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}