{"ast":null,"code":"var _jsxFileName = \"/home/lupe/Documents/myhypo/ciclo4/src/views/Item-Compra/Produto/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Table, Alert, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { api } from '../../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProdutoItens = props => {\n  _s();\n\n  const [id] = useState(props.match.params.id);\n  let [alo, setAlo] = useState();\n  let [cadAtivado, setCadAtivado] = useState();\n  let [editAtivado, setEditAtivado] = useState(); // let [idEdit, setIdEdit] = useState()\n  // let [cId, setcId] = useState()\n\n  let [pId, setpId] = useState();\n  const [data, setData] = useState([]);\n  const [status, setStatus] = useState({\n    type: '',\n    message: ''\n  });\n  /* const [item, setItem] = useState({\n      CompraId: '',\n      ProdutoId: '',\n      quantidade: '',\n      valor: ''\n  }) */\n\n  let [quantidade, setQuantidade] = useState();\n  let [valor, setValor] = useState();\n\n  const getItens = async id => {\n    await axios.get(`${api}/item-produto/${id}`).then(response => {\n      setData(response.data.ito);\n      setQuantidade(response.data.ito.quantidade);\n      setValor(response.data.ito.valor);\n    }).catch(() => {\n      setStatus({\n        type: 'error',\n        message: \"Erro: sem conexão com a API.\"\n      });\n      console.log(\"Erro: sem conexão com a API.\");\n    });\n  };\n\n  const getDataItem = async (cId, pId) => {\n    if (editAtivado !== false) {\n      await axios.get(`${api}/item-compra-produto/${cId}/${pId}`).then(response => {\n        setQuantidade(response.data.ito[0].quantidade);\n        setValor(response.data.ito[0].valor);\n        console.log(response.data.ito[0]);\n      }).catch(() => {\n        setStatus({\n          type: 'error',\n          message: \"Erro: sem conexão com a API.\"\n        });\n        console.log(\"Erro: sem conexão com a API.\");\n      });\n    }\n  };\n\n  const delItem = async (idItemC, idItemP) => {\n    console.log(idItemC, idItemP);\n    const headers = {\n      'Content-type': 'application/json'\n    };\n\n    if (window.confirm('Tem certeza que quer excluir esse item?')) {\n      console.log('confirmado');\n      await axios.delete(`${api}/excluir-item-compra/${idItemC}/${idItemP}`, {\n        headers\n      }).then(response => {\n        setStatus({\n          type: 'error',\n          message: response.data.message\n        });\n        /* getItens(comId, cliId)\n        setAlo(true) */\n      }).catch(() => {\n        setStatus({\n          type: 'error',\n          message: 'Erro: Não foi possível conexão com API'\n        });\n      });\n      getItens(id);\n      setAlo(true);\n    }\n  };\n\n  editAtivado = false;\n\n  const editOn = (CompId, ProId) => {\n    getEData(CompId, ProId);\n    setEditAtivado(true);\n    setcId(CompId);\n    setpId(ProId);\n  };\n\n  const editOff = () => {\n    setEditAtivado(false);\n    setcId(0);\n    setpId(0);\n  };\n\n  const getEData = async (CompId, ProId) => {\n    console.log(CompId, ProId);\n    await axios.get(`${api}/item-compra-produto/${CompId}/${ProId}`).then(response => {\n      setQuantidade(response.data.ito[0].quantidade);\n      setValor(response.data.ito[0].valor);\n    }).catch(() => {\n      console.log(\"Erro: não foi possível acessar API.\");\n    });\n    setcId(CompId);\n    setpId(ProId);\n  };\n\n  const editItem = async (e, CompId, ProId, quantidade, valor) => {\n    e.preventDefault();\n    setEditAtivado(false);\n    setcId(0);\n    setpId(0);\n    const headers = {\n      'Content-Type': \"application/json\"\n    };\n    await axios.put(`${api}/editar-item-compra/${CompId}/${ProId}`, {\n      quantidade,\n      valor\n    }, {\n      headers\n    }).then(response => {\n      setStatus({\n        type: 'success',\n        message: response.data.message\n      }); // console.log(response.data.type)\n\n      console.log(response.data.message);\n    }).catch(() => {\n      setStatus({\n        type: 'error',\n        message: 'Não foi possível acessar API.'\n      });\n    });\n  };\n\n  useEffect(() => {\n    getItens(id);\n    getDataItem(id, pId);\n  }, [id, pId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Visualizar informa\\xE7\\xF5es dos itens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-auto p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"btn btn-outline-success btn-sm\",\n            children: \"Compras\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), status.type === 'error' && cadAtivado !== true && alo === true ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: status.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this) : '', status.type === 'success' && cadAtivado !== true && alo === true ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"success\",\n          children: status.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id da compra\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id do produto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.CompraId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.ProdutoId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), item.ProdutoId !== pId ? /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quantidade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 37\n            }, this) :\n            /*#__PURE__*/\n\n            /* console.log(`id produto clicado: ${pId}. id do item da fila: ${item.ProdutoId}`) */\n            _jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"w-70 p-2\",\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"quantidade\",\n                  placeholder: \"Quantidade\",\n                  type: \"text\",\n                  value: quantidade,\n                  onChange: e => setQuantidade(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this), item.ProdutoId !== pId ? /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.valor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"w-70 p-2\",\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"valor\",\n                  placeholder: \"Valor\",\n                  type: \"text\",\n                  value: valor,\n                  onChange: e => setValor(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }, this), item.ProdutoId !== pId && editAtivado !== true ? /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => editOn(item.CompraId, item.ProdutoId),\n                className: \"btn btn-outline-warning btn-sm\",\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn btn-outline-danger btn-sm\",\n                onClick: () => delItem(item.CompraId, item.ProdutoId),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: e => editItem(e, item.CompraId, item.ProdutoId, quantidade, valor),\n                className: \"btn btn-outline-success btn-sm\",\n                children: \"Confirmar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: e => editOff(),\n                className: \"btn btn-outline-danger btn-sm\",\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 37\n            }, this)]\n          }, item.ProdutoId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProdutoItens, \"EiJq4M92SiByybqaJH1cXtE5r5s=\");\n\n_c = ProdutoItens;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProdutoItens\");","map":{"version":3,"sources":["/home/lupe/Documents/myhypo/ciclo4/src/views/Item-Compra/Produto/index.js"],"names":["axios","useEffect","useState","Link","Container","Table","Alert","Form","FormGroup","Label","Input","Button","api","ProdutoItens","props","id","match","params","alo","setAlo","cadAtivado","setCadAtivado","editAtivado","setEditAtivado","pId","setpId","data","setData","status","setStatus","type","message","quantidade","setQuantidade","valor","setValor","getItens","get","then","response","ito","catch","console","log","getDataItem","cId","delItem","idItemC","idItemP","headers","window","confirm","delete","editOn","CompId","ProId","getEData","setcId","editOff","editItem","e","preventDefault","put","map","item","CompraId","ProdutoId","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Table, Alert, Form, FormGroup, Label, Input, Button } from \"reactstrap\"\n\nimport { api } from '../../../config'\n\nexport const ProdutoItens = (props) => {\n\n    const [id] = useState(props.match.params.id)\n    let [alo, setAlo] = useState()\n    let [cadAtivado, setCadAtivado] = useState()\n    let [editAtivado, setEditAtivado] = useState()\n    // let [idEdit, setIdEdit] = useState()\n    // let [cId, setcId] = useState()\n    let [pId, setpId] = useState()\n    const [data, setData] = useState([])\n    const [status, setStatus] = useState({\n        type: '',\n        message: ''\n    })\n    /* const [item, setItem] = useState({\n        CompraId: '',\n        ProdutoId: '',\n        quantidade: '',\n        valor: ''\n    }) */\n\n    let [quantidade, setQuantidade] = useState()\n    let [valor, setValor] = useState()\n\n\n    const getItens = async (id) => {\n        await axios.get(`${api}/item-produto/${id}`).then(\n            (response) => {\n                setData(response.data.ito)\n                setQuantidade(response.data.ito.quantidade)\n                setValor(response.data.ito.valor)\n            }\n        ).catch(() => {\n            setStatus({\n                type: 'error',\n                message: \"Erro: sem conexão com a API.\"\n            })\n            console.log(\"Erro: sem conexão com a API.\")\n        })\n    }\n\n    const getDataItem = async (cId, pId) => {\n        if(editAtivado !== false)\n        {await axios.get(`${api}/item-compra-produto/${cId}/${pId}`).then(\n            (response) => {\n\n                setQuantidade(response.data.ito[0].quantidade)\n                setValor(response.data.ito[0].valor)\n                console.log(response.data.ito[0])\n            }\n        ).catch(() => {\n            setStatus({\n                type: 'error',\n                message: \"Erro: sem conexão com a API.\"\n            })\n            console.log(\"Erro: sem conexão com a API.\")\n        })}\n    }\n\n\n    const delItem = async (idItemC, idItemP) => {\n        console.log(idItemC, idItemP)\n        const headers = {\n            'Content-type': 'application/json'\n        }\n\n        if (window.confirm('Tem certeza que quer excluir esse item?')) {\n            console.log('confirmado')\n            await axios.delete(`${api}/excluir-item-compra/${idItemC}/${idItemP}`, { headers })\n                .then((response) => {\n                    setStatus({\n                        type: 'error',\n                        message: response.data.message\n                    })\n                    /* getItens(comId, cliId)\n                    setAlo(true) */\n                }).catch(() => {\n                    setStatus({\n                        type: 'error',\n                        message: 'Erro: Não foi possível conexão com API'\n                    })\n                })\n            getItens(id)\n            setAlo(true)\n        }\n    }\n\n    editAtivado = false\n    \n\n    const editOn = (CompId, ProId) => {\n        getEData(CompId, ProId)\n        setEditAtivado(true)\n        setcId(CompId)\n        setpId(ProId)\n    }\n\n    const editOff = () => {\n        setEditAtivado(false)\n        setcId(0)\n        setpId(0)\n    }\n\n    const getEData = async (CompId, ProId) => {\n        console.log(CompId, ProId)\n        await axios.get(`${api}/item-compra-produto/${CompId}/${ProId}`)\n            .then((response) => {\n                setQuantidade(response.data.ito[0].quantidade)\n                setValor(response.data.ito[0].valor)\n            })\n            .catch(() => {\n                console.log(\"Erro: não foi possível acessar API.\")\n            })\n        setcId(CompId)\n        setpId(ProId)\n    }\n\n    const editItem = async (e, CompId, ProId, quantidade, valor) => {\n        e.preventDefault()\n        setEditAtivado(false)\n        setcId(0)\n        setpId(0)\n\n        const headers = {\n            'Content-Type': \"application/json\"\n        }\n\n        await axios.put(`${api}/editar-item-compra/${CompId}/${ProId}`, { quantidade, valor }, { headers }).then(response => {\n            setStatus({\n                type: 'success',\n                message: response.data.message\n            })\n            // console.log(response.data.type)\n            console.log(response.data.message)\n        }).catch(() => {\n            setStatus({\n                type: 'error',\n                message: 'Não foi possível acessar API.'\n            })\n        })\n    }\n\n\n    useEffect(() => {\n        getItens(id);\n        getDataItem(id, pId)\n    }, [id, pId])\n\n    return (\n        <div>\n            <Container>\n                <div>\n                    <div>\n                        <h1>Visualizar informações dos itens</h1>\n                    </div>\n                    <div className=\"m-auto p-2\">\n                        <span\n                            className=\"btn btn-outline-success btn-sm\">Compras</span>\n                    </div>\n                    {status.type === 'error' && cadAtivado !== true && alo === true ?\n                        <Alert color=\"danger\">\n                            {status.message}\n                        </Alert>\n                        : ''}\n                    {status.type === 'success' && cadAtivado !== true && alo === true ?\n                        <Alert color=\"success\">\n                            {status.message}\n                        </Alert> : ''}\n                </div>\n                <Table striped>\n                    <thead>\n                        <tr>\n                            <th>Id da compra</th>\n                            <th>Id do produto</th>\n                            <th>Quantidade</th>\n                            <th>Valor</th>\n                            <th>Ação</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map(item => (\n                            <tr key={item.ProdutoId}>\n                                <td>{item.CompraId}</td>\n                                <td>{item.ProdutoId}</td>\n\n                                {item.ProdutoId !== pId ?\n                                    <td>{item.quantidade}</td> : /* console.log(`id produto clicado: ${pId}. id do item da fila: ${item.ProdutoId}`) */\n                                    <td>\n                                        <Form className=\"w-70 p-2\">\n                                            <Input\n                                                name=\"quantidade\"\n                                                placeholder=\"Quantidade\"\n                                                type=\"text\"\n                                                value={quantidade}\n                                                onChange={e => setQuantidade(e.target.value)}\n                                            />\n                                        </Form>\n                                    </td>\n                                }\n\n                                {item.ProdutoId !== pId ?\n                                    <td>{item.valor}</td> : \n                                    <td>\n                                        <Form className=\"w-70 p-2\">\n                                            <Input\n                                                name=\"valor\"\n                                                placeholder=\"Valor\"\n                                                type=\"text\"\n                                                value={valor}\n                                                onChange={e => setValor(e.target.value)}\n                                            />\n                                        </Form>\n                                    </td>\n                                }\n                                {item.ProdutoId !== pId && editAtivado !== true ?\n                                    <td className=\"text-center\">\n                                        <span onClick={() => editOn(item.CompraId, item.ProdutoId)}\n                                            className=\"btn btn-outline-warning btn-sm\">\n                                            Editar\n                                        </span>\n\n                                        <span className=\"btn btn-outline-danger btn-sm\"\n                                            onClick={() => delItem(item.CompraId, item.ProdutoId)}>Excluir</span>\n                                    </td>\n                                    :\n                                    <td className=\"text-center\">\n                                        <span onClick={e => editItem(e, item.CompraId, item.ProdutoId, quantidade, valor)}\n                                            className=\"btn btn-outline-success btn-sm\">\n                                            Confirmar\n                                        </span>\n\n                                        <span onClick={e => editOff()}\n                                            className=\"btn btn-outline-danger btn-sm\">\n                                            Cancelar\n                                        </span>\n                                    </td>}\n                            </tr>\n\n                        ))}\n\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}