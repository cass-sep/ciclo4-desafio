{"ast":null,"code":"var _jsxFileName = \"/home/lupe/Documents/git/ciclo4/src/views/Compra/Listar/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Table, Alert, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { getCliente } from '../../Item-Compra/Compra/get-cliente';\nimport profile from '../../../profile.png';\nimport { api } from '../../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListarCompras = () => {\n  _s();\n\n  let [alo, setAlo] = useState();\n  let [cadAtivado, setCadAtivado] = useState();\n  let [editAtivado, setEditAtivado] = useState();\n  let [idEdit, setIdEdit] = useState();\n  const [infoC, setInfoC] = useState([]);\n  const [data, setData] = useState([]);\n  const [status, setStatus] = useState({\n    type: '',\n    message: ''\n  });\n  const [compra, setCompra] = useState({\n    id: '',\n    ClienteId: '',\n    data: ''\n  }); // const [dataCompra, setDataCompra] = useState()\n\n  let [daCo, setDaco] = useState();\n\n  const valorInput = e => setCompra({ ...compra,\n    [e.target.name]: e.target.value\n  });\n\n  const cadOn = alerto => {\n    if (cadAtivado !== true) {\n      setCadAtivado(cadAtivado = true);\n    } else {\n      setCadAtivado(cadAtivado = false);\n      setAlo(alo = alerto);\n    }\n  };\n\n  const getCompras = async () => {\n    await axios.get(api + '/listacompras').then(response => {\n      setData(response.data);\n    }).catch(() => {\n      setStatus({\n        type: 'error',\n        message: \"Erro: sem conexão com a API.\"\n      });\n      console.log(\"Erro: sem conexão com a API.\");\n    });\n  };\n\n  const getDataCompra = async id => {\n    await axios.get(`${api}/compra/${id}`).then(response => {\n      setDaco(response.data.data);\n    }).catch(() => {\n      setStatus({\n        type: 'error',\n        message: \"Erro: sem conexão com a API.\"\n      });\n      console.log(\"Erro: sem conexão com a API.\");\n    });\n  };\n\n  const delCompra = async idCompra => {\n    console.log(idCompra);\n    const headers = {\n      'Content-type': 'application/json'\n    };\n\n    if (window.confirm('Tem certeza que deseja excluir esta compra?')) {\n      await axios.delete(`${api}/excluir-compra/${idCompra}`, {\n        headers\n      }).then(response => {\n        // console.log(response.data.type)\n        // console.log(response.data.message)\n        setStatus({\n          type: 'error',\n          message: response.data.message\n        });\n        getCompras();\n        setAlo(true);\n      }).catch(() => {\n        setStatus({\n          type: 'error',\n          message: 'Erro: Não foi possível conexão com API'\n        });\n      });\n    }\n  };\n\n  const cadCompra = async e => {\n    e.preventDefault();\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    await axios.post(`${api}/novacompras`, compra, {\n      headers\n    }).then(response => {\n      if (response.data.error) {\n        setStatus({\n          type: 'error',\n          message: response.data.message\n        });\n        console.log(status.message);\n      } else {\n        setStatus({\n          type: 'success',\n          message: response.data.message\n        });\n      }\n    }).catch(() => {\n      console.log('Erro! Sem conexão.');\n    });\n    console.log(status.type);\n    getCompras();\n    cadOn(true);\n    setCompra({\n      id: '',\n      ClienteId: '',\n      data: ''\n    });\n  };\n\n  editAtivado = false;\n\n  const editOn = editId => {\n    getDaco(editId); // getDataCompra(editId)\n\n    setEditAtivado(editAtivado = true);\n    setIdEdit(idEdit = editId); // setDaco(comData)\n\n    console.log(editAtivado); // console.log(editId)\n    // console.log(daCo)\n  };\n\n  const editOff = () => {\n    setEditAtivado(false);\n    setIdEdit(0);\n  };\n\n  const getDaco = async id => {\n    await axios(`${api}/compra/${id}`).then(response => {\n      setDaco(response.data.compras.data); // console.log(response.data.compras.data)\n    }).catch(() => {\n      console.log(\"Erro: não foi possível acessar API.\");\n    });\n    setIdEdit(id);\n    console.log(idEdit);\n  };\n\n  const editCompra = async (e, id, dataC, ClienteId) => {\n    e.preventDefault();\n    setEditAtivado(false);\n    setIdEdit(0);\n    const headers = {\n      'Content-Type': \"application/json\"\n    };\n    await axios.put(`${api}/editar-compra/${id}`, {\n      dataC,\n      ClienteId\n    }, {}, {\n      headers\n    }).then(response => {\n      /* setStatus({\n          type: 'success',\n          message: 'Alteração feita com sucesso.'\n      }) */\n      // console.log(response.data.type)\n      console.log(response.data.message);\n    }).catch(() => {\n      /* setStatus({\n          type: 'error',\n          message: 'Não foi possível acessar API.'\n      }) */\n    });\n  };\n\n  const alerta = () => {\n    let alerto = false;\n    cadOn(alerto);\n  };\n\n  useEffect(() => {\n    getCompras();\n    getDataCompra(idEdit); // eslint-disable-next-line\n  }, [idEdit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Visualizar informa\\xE7\\xF5es das compras\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"profile-c\",\n          className: \"d-flex c-place end\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"m-0 fit\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              id: \"info\",\n              className: \"d-grid p-2 fit\",\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: infoC.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: infoC.endereco\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: infoC.cidade\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: infoC.uf\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: infoC.nascimento\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 pt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"pic\",\n              alt: \"profile\",\n              src: profile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-auto p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => alerta(),\n            className: \"btn btn-outline-primary btn-sm\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), cadAtivado === true ? /*#__PURE__*/_jsxDEV(Form, {\n            className: \"d-flex flex-row mt-2 bg-light border-top border-primary\",\n            onSubmit: cadCompra,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"d-flex flex-row\",\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"w-70 p-2\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: \"Id do Cliente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"ClienteId\",\n                  placeholder: \"Id do cliente\",\n                  type: \"text\",\n                  onChange: valorInput,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                className: \"w-70 p-2\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: \"Data da Compra\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"data\",\n                  placeholder: \"Data da compra\",\n                  type: \"text\",\n                  onChange: valorInput,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"h-50 d-flex my-auto mb-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                outline: true,\n                color: \"primary\",\n                children: \"Cadastrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"reset\",\n                outline: true,\n                color: \"primary\",\n                children: \"Limpar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), status.type === 'error' && cadAtivado !== true && alo === true ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: status.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this) : '', status.type === 'success' && cadAtivado !== true && alo === true ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"success\",\n          children: status.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id do Cliente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                onClick: () => getCliente(item.ClienteId, setInfoC, setStatus),\n                children: item.ClienteId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), item.id !== idEdit ? /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 55\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"data\",\n                  placeholder: \"Data da compra\",\n                  type: \"text\",\n                  value: daCo,\n                  onChange: e => setDaco(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 37\n            }, this), item.id !== idEdit && editAtivado !== true ? /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/itens-compra/${item.id}`,\n                className: \"btn btn-outline-primary btn-sm\",\n                children: \"Itens\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => editOn(item.id),\n                className: \"btn btn-outline-warning btn-sm\",\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn btn-outline-danger btn-sm\",\n                onClick: () => delCompra(item.id),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: e => editCompra(e, item.id, daCo, item.ClienteId),\n                className: \"btn btn-outline-success btn-sm\",\n                children: \"Confirmar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: e => editOff(),\n                className: \"btn btn-outline-danger btn-sm\",\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 37\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListarCompras, \"uJ6PhaMjWRVuFZJYVZFS4NOI2wU=\");\n\n_c = ListarCompras;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListarCompras\");","map":{"version":3,"sources":["/home/lupe/Documents/git/ciclo4/src/views/Compra/Listar/index.js"],"names":["axios","useEffect","useState","Link","Container","Table","Alert","Form","FormGroup","Label","Input","Button","getCliente","profile","api","ListarCompras","alo","setAlo","cadAtivado","setCadAtivado","editAtivado","setEditAtivado","idEdit","setIdEdit","infoC","setInfoC","data","setData","status","setStatus","type","message","compra","setCompra","id","ClienteId","daCo","setDaco","valorInput","e","target","name","value","cadOn","alerto","getCompras","get","then","response","catch","console","log","getDataCompra","delCompra","idCompra","headers","window","confirm","delete","cadCompra","preventDefault","post","error","editOn","editId","getDaco","editOff","compras","editCompra","dataC","put","alerta","nome","endereco","cidade","uf","nascimento","map","item"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Table, Alert, Form, FormGroup, Label, Input, Button } from \"reactstrap\"\nimport { getCliente } from '../../Item-Compra/Compra/get-cliente'\nimport profile from '../../../profile.png'\n\nimport { api } from '../../../config'\n\nexport const ListarCompras = () => {\n\n    let [alo, setAlo] = useState()\n    let [cadAtivado, setCadAtivado] = useState()\n    let [editAtivado, setEditAtivado] = useState()\n    let [idEdit, setIdEdit] = useState()\n\n    const [infoC, setInfoC] = useState([])\n\n    const [data, setData] = useState([])\n    const [status, setStatus] = useState({\n        type: '',\n        message: ''\n    })\n    const [compra, setCompra] = useState({\n        id: '',\n        ClienteId: '',\n        data: ''\n    })\n\n    // const [dataCompra, setDataCompra] = useState()\n    let [daCo, setDaco] = useState()\n\n    const valorInput = e => setCompra({\n        ...compra, [e.target.name]: e.target.value\n    })\n\n    const cadOn = (alerto) => {\n        if (cadAtivado !== true) {\n            setCadAtivado(cadAtivado = true)\n        } else {\n            setCadAtivado(cadAtivado = false)\n            setAlo(alo = alerto)\n        }\n    }\n\n    const getCompras = async () => {\n        await axios.get(api + '/listacompras').then(\n            (response) => {\n                setData(response.data)\n\n            }\n        ).catch(() => {\n            setStatus({\n                type: 'error',\n                message: \"Erro: sem conexão com a API.\"\n            })\n            console.log(\"Erro: sem conexão com a API.\")\n        })\n    }\n\n\n    const getDataCompra = async (id) => {\n        await axios.get(`${api}/compra/${id}`).then(\n            (response) => {\n\n                setDaco(response.data.data)\n\n            }\n        ).catch(() => {\n            setStatus({\n                type: 'error',\n                message: \"Erro: sem conexão com a API.\"\n            })\n            console.log(\"Erro: sem conexão com a API.\")\n        })\n    }\n\n\n\n    const delCompra = async (idCompra) => {\n        console.log(idCompra)\n\n        const headers = {\n            'Content-type': 'application/json'\n        }\n\n        if (window.confirm('Tem certeza que deseja excluir esta compra?')) {\n            await axios.delete(`${api}/excluir-compra/${idCompra}`, { headers })\n                .then((response) => {\n                    // console.log(response.data.type)\n                    // console.log(response.data.message)\n                    setStatus({\n                        type: 'error',\n                        message: response.data.message\n                    })\n                    getCompras()\n                    setAlo(true)\n                }).catch(() => {\n                    setStatus({\n                        type: 'error',\n                        message: 'Erro: Não foi possível conexão com API'\n                    })\n                })\n        }\n    }\n\n    const cadCompra = async e => {\n        e.preventDefault()\n\n        const headers = {\n            'Content-Type': 'application/json'\n        }\n\n        await axios.post(`${api}/novacompras`, compra, { headers })\n            .then((response) => {\n                if (response.data.error) {\n                    setStatus({\n                        type: 'error',\n                        message: response.data.message\n                    })\n                    console.log(status.message)\n                } else {\n                    setStatus({\n                        type: 'success',\n                        message: response.data.message\n                    })\n                }\n            })\n            .catch(() => {\n                console.log('Erro! Sem conexão.')\n            })\n\n        console.log(status.type)\n        getCompras()\n        cadOn(true)\n        setCompra({\n            id: '',\n            ClienteId: '',\n            data: ''\n        })\n    }\n\n    editAtivado = false\n\n    const editOn = (editId) => {\n        getDaco(editId)\n        // getDataCompra(editId)\n        setEditAtivado(editAtivado = true)\n        setIdEdit(idEdit = editId)\n        // setDaco(comData)\n        console.log(editAtivado)\n        // console.log(editId)\n        // console.log(daCo)\n    }\n\n    const editOff = () => {\n        setEditAtivado(false)\n        setIdEdit(0)\n    }\n\n    const getDaco = async (id) => {\n        await axios(`${api}/compra/${id}`)\n            .then((response) => {\n                setDaco(response.data.compras.data)\n                // console.log(response.data.compras.data)\n            })\n            .catch(() => {\n                console.log(\"Erro: não foi possível acessar API.\")\n            })\n        setIdEdit(id)\n        console.log(idEdit)\n    }\n\n    const editCompra = async (e, id, dataC, ClienteId) => {\n        e.preventDefault()\n        setEditAtivado(false)\n        setIdEdit(0)\n\n        const headers = {\n            'Content-Type': \"application/json\"\n        }\n\n        await axios.put(`${api}/editar-compra/${id}`, { dataC, ClienteId }, {\n\n        }, { headers }).then(response => {\n            /* setStatus({\n                type: 'success',\n                message: 'Alteração feita com sucesso.'\n            }) */\n            // console.log(response.data.type)\n            console.log(response.data.message)\n        }).catch(() => {\n            /* setStatus({\n                type: 'error',\n                message: 'Não foi possível acessar API.'\n            }) */\n        })\n    }\n\n    const alerta = () => {\n        let alerto = false\n        cadOn(alerto)\n    }\n\n    useEffect(() => {\n        getCompras();\n        getDataCompra(idEdit)\n        // eslint-disable-next-line\n    }, [idEdit])\n\n    return (\n        <div>\n            <Container>\n                <div>\n                    <div>\n                        <h1>Visualizar informações das compras</h1>\n                    </div>\n\n                    <div id=\"profile-c\" className=\"d-flex c-place end\">\n                        <table className=\"m-0 fit\">\n                            <tbody id=\"info\" className=\"d-grid p-2 fit\">\n                                <tr>{infoC.nome}</tr>\n                                <tr>{infoC.endereco}</tr>\n                                <tr>{infoC.cidade}</tr>\n                                <tr>{infoC.uf}</tr>\n                                <tr>{infoC.nascimento}</tr>\n                            </tbody>\n                        </table>\n                        <div className=\"p-4 pt-2\">\n                            <img id=\"pic\" alt='profile' src={profile} />\n                        </div>\n                    </div>\n\n                    <div className=\"m-auto p-2\">\n                        <span onClick={() => alerta()}\n                            className=\"btn btn-outline-primary btn-sm\">Cadastrar</span>\n\n\n                        {cadAtivado === true ?\n                            <Form className=\"d-flex flex-row mt-2 bg-light border-top border-primary\" onSubmit={cadCompra}>\n                                <FormGroup className='d-flex flex-row'>\n                                    <FormGroup className=\"w-70 p-2\">\n                                        <Label>\n                                            Id do Cliente\n                                        </Label>\n                                        <Input\n                                            name=\"ClienteId\"\n                                            placeholder=\"Id do cliente\"\n                                            type=\"text\"\n                                            onChange={valorInput}\n                                            required\n                                        />\n                                    </FormGroup>\n                                    <FormGroup className=\"w-70 p-2\">\n                                        <Label>\n                                            Data da Compra\n                                        </Label>\n                                        <Input\n                                            name=\"data\"\n                                            placeholder=\"Data da compra\"\n                                            type=\"text\"\n                                            onChange={valorInput}\n                                            required\n                                        />\n                                    </FormGroup>\n                                </FormGroup>\n                                <FormGroup className=\"h-50 d-flex my-auto mb-auto\">\n                                    <Button type=\"submit\" outline color=\"primary\">\n                                        Cadastrar\n                                    </Button>\n                                    <Button type=\"reset\" outline color=\"primary\">\n                                        Limpar\n                                    </Button>\n                                </FormGroup>\n                            </Form> : \"\"}\n                    </div>\n                    {status.type === 'error' && cadAtivado !== true && alo === true ?\n                        <Alert color=\"danger\">\n                            {status.message}\n                        </Alert>\n                        : ''}\n                    {status.type === 'success' && cadAtivado !== true && alo === true ?\n                        <Alert color=\"success\">\n                            {status.message}\n                        </Alert> : ''}\n                </div>\n                <Table striped>\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Id do Cliente</th>\n                            <th>Data</th>\n                            <th>Ação</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map(item => (\n                            <tr key={item.id}>\n                                <td>{item.id}</td>\n                                <td>\n                                    <Link to=\"#\"\n                                        onClick={() => getCliente(item.ClienteId, setInfoC, setStatus)}>\n                                        {item.ClienteId}\n                                    </Link>\n                                </td>\n                                {item.id !== idEdit ? <td>{item.data}</td> :\n                                    <td>\n                                        <Form>\n                                            <Input\n                                                name=\"data\"\n                                                placeholder=\"Data da compra\"\n                                                type=\"text\"\n                                                value={daCo}\n                                                onChange={e => setDaco(e.target.value)}\n                                            />\n                                        </Form>\n                                    </td>\n                                }\n                                {item.id !== idEdit && editAtivado !== true ?\n                                    <td className=\"text-center\">\n                                        <Link to={`/itens-compra/${item.id}`}\n                                            className=\"btn btn-outline-primary btn-sm\">\n                                            Itens\n                                        </Link>\n                                        <span onClick={() => editOn(item.id)}\n                                            className=\"btn btn-outline-warning btn-sm\">\n                                            Editar\n                                        </span>\n\n                                        <span className=\"btn btn-outline-danger btn-sm\"\n                                            onClick={() => delCompra(item.id)}>Excluir</span>\n                                    </td> :\n                                    <td className=\"text-center\">\n                                        <span onClick={e => editCompra(e, item.id, daCo, item.ClienteId)}\n                                            className=\"btn btn-outline-success btn-sm\">\n                                            Confirmar\n                                        </span>\n                                        <span onClick={e => editOff()}\n                                            className=\"btn btn-outline-danger btn-sm\">\n                                            Cancelar\n                                        </span>\n                                    </td>}\n                            </tr>\n\n                        ))}\n\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}