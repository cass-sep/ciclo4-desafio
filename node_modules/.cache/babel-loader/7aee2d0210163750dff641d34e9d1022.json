{"ast":null,"code":"import axios from \"axios\";\nimport { api } from \"../config\";\nexport const getCliente = async (id, data, status) => {\n  await axios.get(`${api}/cliente/${id}`).then(response => {\n    data(response.data.cliente);\n    status({\n      type: 'success',\n      message: \"Cliente encontrado.\"\n    });\n    console.log(response.data.message);\n    return response.data.message;\n  }).catch(() => {\n    status({\n      type: 'error',\n      message: 'Não foi possível encontrar o cliente.'\n    });\n  });\n}; // importar image profile na pasta src\n// importar getCliente na pasta Components\n// declarar variavel para guardar informações do cliente\n\n/* const [infoC, setInfoC] = useState([]) */\n// variavel para ativar e desativar informacoes\n\n/* let [tOn, setTog] = useState()*/\n// variavel pra saber qual botao foi apertado\n\n/*let [oldId, setOldId] = useState()*/\n// função que ativa e desativa informações\n\n/* const cliAtivo = (id, setInfoC, setStatus) => {\n    getCliente(id, setInfoC, setStatus)\n    if (tOn !== true) {\n        setTog(true)\n        setOldId(id)\n    } else if (id === oldId) {\n        setTog(false)\n    } else {\n        setOldId(id)\n    }\n} */\n// grid na div pai\n\n/* <div className=\"d-grid p-2 c-col\"> */\n// com cadastro na página {cadAtivado !== true && tOn === true ?\n// cadastro em outra página {tOn === true ?\n\n/*    <div id=\"profile-c\" className=\"d-flex c-place end\">\n        <table className=\"m-0 fit\">\n            <tbody id=\"info\" className=\"d-grid p-2 fit\">\n                <tr><td>{infoC.nome}</td></tr>\n                <tr><td>{infoC.endereco}</td></tr>\n                <tr><td>{infoC.cidade}</td></tr>\n                <tr><td>{infoC.uf}</td></tr>\n                <tr><td>{infoC.nascimento}</td></tr>\n            </tbody>\n        </table>\n        <div className=\"p-4 pt-2\">\n            <img id=\"pic\" alt='profile' src={profile} />\n        </div>\n\n    </div> : <div></div>} */\n// link para abrir info\n\n/* <Link to=\"#\"\n    onClick={() => cliAtivo(item.ClienteId, setInfoC, setStatus)}>\n    {item.ClienteId}\n</Link> */","map":{"version":3,"sources":["/home/lupe/Documents/git/ciclo4/src/Components/get-cliente.js"],"names":["axios","api","getCliente","id","data","status","get","then","response","cliente","type","message","console","log","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAOC,EAAP,EAAWC,IAAX,EAAiBC,MAAjB,KAA4B;AAClD,QAAML,KAAK,CAACM,GAAN,CAAW,GAAEL,GAAI,YAAWE,EAAG,EAA/B,EACDI,IADC,CACKC,QAAD,IAAc;AAChBJ,IAAAA,IAAI,CAACI,QAAQ,CAACJ,IAAT,CAAcK,OAAf,CAAJ;AACAJ,IAAAA,MAAM,CAAC;AAACK,MAAAA,IAAI,EAAC,SAAN;AAAiBC,MAAAA,OAAO,EAAC;AAAzB,KAAD,CAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACJ,IAAT,CAAcO,OAA1B;AACA,WAAOH,QAAQ,CAACJ,IAAT,CAAcO,OAArB;AACH,GANC,EAMCG,KAND,CAMO,MAAM;AACXT,IAAAA,MAAM,CAAC;AACHK,MAAAA,IAAI,EAAE,OADH;AAEHC,MAAAA,OAAO,EAAE;AAFN,KAAD,CAAN;AAIH,GAXC,CAAN;AAYH,CAbM,C,CAeP;AACA;AAGA;;AACA;AAGA;;AACA;AAEA;;AACA;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\"\nimport { api } from \"../config\"\n\nexport const getCliente = async (id, data, status) => {\n    await axios.get(`${api}/cliente/${id}`)\n        .then((response) => {\n            data(response.data.cliente)\n            status({type:'success', message:\"Cliente encontrado.\"})\n            console.log(response.data.message)\n            return response.data.message\n        }).catch(() => {\n            status({\n                type: 'error',\n                message: 'Não foi possível encontrar o cliente.'\n            })\n        })\n}\n\n// importar image profile na pasta src\n// importar getCliente na pasta Components\n\n\n// declarar variavel para guardar informações do cliente\n/* const [infoC, setInfoC] = useState([]) */\n\n\n// variavel para ativar e desativar informacoes\n/* let [tOn, setTog] = useState()*/\n\n// variavel pra saber qual botao foi apertado\n/*let [oldId, setOldId] = useState()*/\n\n\n\n// função que ativa e desativa informações\n/* const cliAtivo = (id, setInfoC, setStatus) => {\n    getCliente(id, setInfoC, setStatus)\n    if (tOn !== true) {\n        setTog(true)\n        setOldId(id)\n    } else if (id === oldId) {\n        setTog(false)\n    } else {\n        setOldId(id)\n    }\n} */\n\n\n// grid na div pai\n/* <div className=\"d-grid p-2 c-col\"> */\n\n// com cadastro na página {cadAtivado !== true && tOn === true ?\n// cadastro em outra página {tOn === true ?\n/*    <div id=\"profile-c\" className=\"d-flex c-place end\">\n        <table className=\"m-0 fit\">\n            <tbody id=\"info\" className=\"d-grid p-2 fit\">\n                <tr><td>{infoC.nome}</td></tr>\n                <tr><td>{infoC.endereco}</td></tr>\n                <tr><td>{infoC.cidade}</td></tr>\n                <tr><td>{infoC.uf}</td></tr>\n                <tr><td>{infoC.nascimento}</td></tr>\n            </tbody>\n        </table>\n        <div className=\"p-4 pt-2\">\n            <img id=\"pic\" alt='profile' src={profile} />\n        </div>\n\n    </div> : <div></div>} */\n\n    \n// link para abrir info\n/* <Link to=\"#\"\n    onClick={() => cliAtivo(item.ClienteId, setInfoC, setStatus)}>\n    {item.ClienteId}\n</Link> */"]},"metadata":{},"sourceType":"module"}