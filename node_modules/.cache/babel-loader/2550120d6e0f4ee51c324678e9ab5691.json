{"ast":null,"code":"var _jsxFileName = \"/home/lupe/Documents/myhypo/ciclo4/src/views/Compra/Listar/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Table, Alert, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { api } from '../../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListarCompras = () => {\n  _s();\n\n  let [cadAtivado, setCadAtivado] = useState();\n  const [data, setData] = useState([]);\n  const [status, setStatus] = useState({\n    type: '',\n    message: ''\n  });\n  const [compra, setCompra] = useState({\n    id: '',\n    ClienteId: '',\n    data: ''\n  });\n\n  const valorInput = e => setCompra({ ...compra,\n    [e.target.name]: e.target.value\n  });\n\n  const cadOn = () => {\n    if (cadAtivado !== true) {\n      setCadAtivado(cadAtivado = true);\n    } else {\n      setCadAtivado(cadAtivado = false);\n    }\n  };\n\n  const getCompras = async () => {\n    await axios.get(api + '/listacompras').then(response => {\n      setData(response.data);\n    }).catch(() => {\n      setStatus({\n        type: 'error',\n        message: \"Erro: sem conexão com a API.\"\n      }); // console.log(\"Erro: sem conexão com a API.\")\n    });\n  };\n\n  const delCompra = async idCompra => {\n    console.log(idCompra);\n    const headers = {\n      'Content-type': 'application/json'\n    };\n    await axios.delete(`${api}/excluir-compra/${idCompra}`, {\n      headers\n    }).then(response => {\n      console.log(response.data.type);\n      console.log(response.data.message);\n      getCompras();\n    }).catch(() => {\n      setStatus({\n        type: 'error',\n        message: 'Erro: Não foi possível conexão com API'\n      });\n    });\n  };\n\n  const cadCompra = async e => {\n    e.preventDefault();\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    await axios.post(`${api}/novacompras`, compra, {\n      headers\n    }).then(response => {\n      // console.log(response.data.message)\n      if (response.data.error) {\n        setStatus({\n          type: 'error',\n          message: response.data.message\n        });\n      } else {\n        setStatus({\n          type: 'success',\n          message: response.data.message\n        });\n      }\n    }).catch(() => {\n      console.log('Erro! Sem conexão.');\n    });\n  };\n\n  useEffect(() => {\n    getCompras();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Visualizar informa\\xE7\\xF5es das compras\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-auto p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => cadOn(),\n            className: \"btn btn-outline-primary btn-sm\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), cadAtivado === true ? /*#__PURE__*/_jsxDEV(Form, {\n            className: \"p-2\",\n            onSubmit: cadCompra,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"p-2\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"ClienteId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"ClienteId\",\n                placeholder: \"Id do cliente\",\n                type: \"text\",\n                onChange: valorInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"p-2\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Data da Compra\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"data\",\n                placeholder: \"Data da compra\",\n                type: \"text\",\n                onChange: valorInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), status.type === 'error' ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: status.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id do Cliente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.ClienteId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"/pedidos-servico/\" + item.id,\n                className: \"btn btn-outline-primary btn-sm\",\n                children: \"Pedidos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn btn-outline-danger btn-sm\",\n                onClick: () => delCompra(item.id),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListarCompras, \"6Yv3XQz/j6F1DfEwgSQle99goYQ=\");\n\n_c = ListarCompras;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListarCompras\");","map":{"version":3,"sources":["/home/lupe/Documents/myhypo/ciclo4/src/views/Compra/Listar/index.js"],"names":["axios","useEffect","useState","Link","Container","Table","Alert","Form","FormGroup","Label","Input","api","ListarCompras","cadAtivado","setCadAtivado","data","setData","status","setStatus","type","message","compra","setCompra","id","ClienteId","valorInput","e","target","name","value","cadOn","getCompras","get","then","response","catch","delCompra","idCompra","console","log","headers","delete","cadCompra","preventDefault","post","error","map","item"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Table, Alert, Form, FormGroup, Label, Input } from \"reactstrap\"\n\nimport { api } from '../../../config'\n\nexport const ListarCompras = () => {\n\n    let [cadAtivado, setCadAtivado] = useState()\n    const [data, setData] = useState([])\n    const [status, setStatus] = useState({\n        type: '',\n        message: ''\n    })\n    const [compra, setCompra] = useState({\n        id:'',\n        ClienteId:'',\n        data:''\n    })\n\n    const valorInput = e => setCompra({\n        ...compra, [e.target.name]: e.target.value\n    })\n\n    const cadOn = () =>{\n        if(cadAtivado !== true){\n        setCadAtivado(cadAtivado = true)\n    } else{\n        setCadAtivado(cadAtivado = false)\n    }}\n\n    const getCompras = async () => {\n        await axios.get(api + '/listacompras').then(\n            (response) => {\n                setData(response.data)\n            }\n        ).catch(() => {\n            setStatus({\n                type: 'error',\n                message: \"Erro: sem conexão com a API.\"\n            })\n            // console.log(\"Erro: sem conexão com a API.\")\n        })\n    }\n\n    const delCompra = async (idCompra) =>{\n        console.log(idCompra)\n\n        const headers = {\n            'Content-type':'application/json'\n        }\n\n        await axios.delete(`${api}/excluir-compra/${idCompra}`, {headers})\n        .then((response)=>{\n            console.log(response.data.type)\n            console.log(response.data.message)\n            getCompras()\n        }).catch(()=>{\n            setStatus({\n                type:'error',\n                message:'Erro: Não foi possível conexão com API'\n            })\n        })\n    }\n\n    const cadCompra = async e => {\n        e.preventDefault()\n\n        const headers = {\n            'Content-Type': 'application/json'\n        }\n\n        await axios.post(`${api}/novacompras`, compra, { headers })\n            .then((response) => {\n                // console.log(response.data.message)\n                if (response.data.error) {\n                    setStatus({\n                        type: 'error',\n                        message: response.data.message\n                    })\n                } else {\n                    setStatus({\n                        type: 'success',\n                        message: response.data.message\n                    })\n                }\n            })\n            .catch(() => {\n                console.log('Erro! Sem conexão.')\n            })\n    }\n\n    useEffect(() => {\n        getCompras();\n    }, [])\n\n    return (\n        <div>\n            <Container>\n                <div>\n                    <div>\n                        <h1>Visualizar informações das compras</h1>\n                    </div>\n                    <div className=\"m-auto p-2\">\n                        <span onClick={()=>cadOn()}\n                            className=\"btn btn-outline-primary btn-sm\">Cadastrar</span>\n                            {cadAtivado === true ?\n                        <Form className=\"p-2\" onSubmit={cadCompra}>\n                        <FormGroup className=\"p-2\">\n                            <Label>\n                                ClienteId\n                            </Label>\n                            <Input\n                                name=\"ClienteId\"\n                                placeholder=\"Id do cliente\"\n                                type=\"text\"\n                                onChange={valorInput}\n                            />\n                        </FormGroup>\n                        <FormGroup className=\"p-2\">\n                            <Label>\n                                Data da Compra\n                            </Label>\n                            <Input\n                                name=\"data\"\n                                placeholder=\"Data da compra\"\n                                type=\"text\"\n                                onChange={valorInput}\n                            />\n                        </FormGroup>\n                        </Form> : \"\"}\n                    </div>\n                    {status.type === 'error' ?\n                        <Alert color=\"danger\">\n                            {status.message}\n                        </Alert> : \"\"}\n                </div>\n                <Table striped>\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Id do Cliente</th>\n                            <th>Data</th>\n                            <th>Ação</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map(item => (\n                            <tr key={item.id}>\n                                <td>{item.id}</td>\n                                <td>{item.ClienteId}</td>\n                                <td>{item.data}</td>\n                                <td className=\"text-center\">\n                                    <Link to={\"/pedidos-servico/\" + item.id}\n                                        className=\"btn btn-outline-primary btn-sm\">\n                                        Pedidos\n                                    </Link>\n                                    <span className=\"btn btn-outline-danger btn-sm\"\n                                    onClick={()=>delCompra(item.id)}>Excluir</span>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}