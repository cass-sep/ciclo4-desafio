{"ast":null,"code":"import axios from \"axios\"; // import { useState } from \"react/cjs/react.development\"\n\nimport { api } from \"../config\";\nexport const getCliente = async (id, data, status, tO) => {\n  await axios.get(`${api}/cliente/${id}`).then(response => {\n    data(response.data.cliente);\n  }).catch(() => {\n    status({\n      type: 'error',\n      message: 'Não foi possível encontrar o cliente.'\n    });\n  });\n  toggling(id, tO);\n};\nexport const toggling = async (id, toggleOn) => {\n  if (toggleOn === false) {\n    toggleOn = true;\n    let oldId;\n  } else if (oldId === id) {\n    toggleOn = false;\n  } else {\n    oldId = id;\n  }\n};","map":{"version":3,"sources":["/home/lupe/Documents/git/ciclo4/src/Components/get-cliente.js"],"names":["axios","api","getCliente","id","data","status","tO","get","then","response","cliente","catch","type","message","toggling","toggleOn","oldId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAOC,EAAP,EAAWC,IAAX,EAAiBC,MAAjB,EAAyBC,EAAzB,KAA+B;AACrD,QAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,GAAI,YAAWE,EAAG,EAA/B,EACLK,IADK,CACCC,QAAD,IAAa;AACfL,IAAAA,IAAI,CAACK,QAAQ,CAACL,IAAT,CAAcM,OAAf,CAAJ;AACH,GAHK,EAGHC,KAHG,CAGG,MAAI;AACTN,IAAAA,MAAM,CAAC;AACHO,MAAAA,IAAI,EAAC,OADF;AAEHC,MAAAA,OAAO,EAAC;AAFL,KAAD,CAAN;AAIH,GARK,CAAN;AASAC,EAAAA,QAAQ,CAACX,EAAD,EAAKG,EAAL,CAAR;AACH,CAXM;AAcP,OAAO,MAAMQ,QAAQ,GAAG,OAAOX,EAAP,EAAWY,QAAX,KAAsB;AAC1C,MAAGA,QAAQ,KAAK,KAAhB,EAAsB;AAClBA,IAAAA,QAAQ,GAAG,IAAX;AACA,QAAIC,KAAJ;AACH,GAHD,MAGM,IAAGA,KAAK,KAAKb,EAAb,EAAgB;AAClBY,IAAAA,QAAQ,GAAG,KAAX;AACH,GAFK,MAEA;AAACC,IAAAA,KAAK,GAAGb,EAAR;AAAW;AACrB,CAPM","sourcesContent":["import axios from \"axios\"\n// import { useState } from \"react/cjs/react.development\"\nimport { api } from \"../config\"\n\nexport const getCliente = async (id, data, status, tO) =>{\n    await axios.get(`${api}/cliente/${id}`)\n    .then((response) =>{\n        data(response.data.cliente)\n    }).catch(()=>{\n        status({\n            type:'error',\n            message:'Não foi possível encontrar o cliente.'\n        })\n    })\n    toggling(id, tO)\n}\n\n\nexport const toggling = async (id, toggleOn)=>{\n    if(toggleOn === false){\n        toggleOn = true\n        let oldId\n    }else if(oldId === id){\n        toggleOn = false\n    }else {oldId = id}\n}"]},"metadata":{},"sourceType":"module"}