{"ast":null,"code":"var _jsxFileName = \"/home/lupe/Documents/myhypo/ciclo4/src/Components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, Container } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Menu = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        color: \"info\",\n        expand: \"md\",\n        dark: true,\n        children: [/*#__PURE__*/_jsxDEV(NavbarBrand, {\n          href: \"/\",\n          children: \"TI Academy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n          onClick: function noRefCheck() {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          navbar: true,\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"me\",\n            navbar: true,\n            children: /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                href: \"/\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Menu, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/lupe/Documents/myhypo/ciclo4/src/Components/Menu.js"],"names":["React","useState","Navbar","NavbarBrand","NavbarToggler","Collapse","Nav","NavItem","NavLink","Container","Menu","props","isOpen","setIsOpen","toggle","noRefCheck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACCC,MADD,EAECC,WAFD,EAGCC,aAHD,EAICC,QAJD,EAKCC,GALD,EAMCC,OAND,EAOCC,OAPD,EAQCC,SARD,QASO,YATP;;AAaA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMa,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AAEA,sBACC;AAAA,2BACC,QAAC,SAAD;AAAA,6BACC,QAAC,MAAD;AACC,QAAA,KAAK,EAAC,MADP;AAEC,QAAA,MAAM,EAAC,IAFR;AAGC,QAAA,IAAI,MAHL;AAAA,gCAIC,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,eAOC,QAAC,aAAD;AAAe,UAAA,OAAO,EAAE,SAASG,UAAT,GAAsB,CAAG;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAPD,eAQC,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAA,iCACC,QAAC,GAAD;AACC,YAAA,SAAS,EAAC,IADX;AAEC,YAAA,MAAM,MAFP;AAAA,mCAIC,QAAC,OAAD;AAAA,qCACC,QAAC,OAAD;AAAS,gBAAA,IAAI,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBARD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA2BA,CAhCM;;GAAML,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\"\nimport {\n\tNavbar,\n\tNavbarBrand,\n\tNavbarToggler,\n\tCollapse,\n\tNav,\n\tNavItem,\n\tNavLink,\n\tContainer\n} from 'reactstrap'\n\n\n\nexport const Menu = (props) => {\n\tconst [isOpen, setIsOpen] = useState(false)\n\n\tconst toggle = () => setIsOpen(!isOpen)\n\n\treturn (\n\t\t<div>\n\t\t\t<Container>\n\t\t\t\t<Navbar\n\t\t\t\t\tcolor=\"info\"\n\t\t\t\t\texpand=\"md\"\n\t\t\t\t\tdark >\n\t\t\t\t\t<NavbarBrand href=\"/\">\n\t\t\t\t\t\tTI Academy\n\t\t\t\t\t</NavbarBrand>\n\t\t\t\t\t<NavbarToggler onClick={function noRefCheck() { }} />\n\t\t\t\t\t<Collapse navbar>\n\t\t\t\t\t\t<Nav\n\t\t\t\t\t\t\tclassName=\"me\"\n\t\t\t\t\t\t\tnavbar\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t\t<NavLink href=\"/\">\n\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Collapse>\n\t\t\t\t</Navbar>\n\t\t\t</Container>\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}